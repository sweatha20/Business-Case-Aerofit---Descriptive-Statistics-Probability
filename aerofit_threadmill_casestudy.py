# -*- coding: utf-8 -*-
"""Aerofit Threadmill CaseStudy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d57_6jFktd59opbg-y09PXRDB6luoBYL
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""**1.Defining Problem Statement and Analysing basic metrics**"""

df = pd.read_csv('aerofit_treadmill.txt')
df

df.shape

"""Dataset contains 180 rows and 9 columns"""

df.info()

"""

1.   Product, Gender and Marital Status are object(string)
2.   Age, Education, Usage, Fitness, Income and Miles are in int64(integer)


"""

df.isnull().any()

"""There are no missing values in the data."""

df.describe(include='all')

"""**Observations**

* There are 3 unique products in the dataset.
* KP281 is the most frequent product.
* Minimum & Maximum age of the person is 18 & 50, mean is 28.79 and 75% of persons have age less than or equal to 33.
* 75% of persons are having education <= 16 years.
* Out of 180 data points, 104's gender is Male and rest are the female.
* Standard deviation for Income & Miles is very high. These variables might have the
outliers in it.

**2.Non-Graphical Analysis: Value counts and unique attributes**
"""

df['Product'].nunique()

df['Product'].unique().tolist()

df['Age'].unique()

total_unique_age = df['Age'].nunique()
total_unique_age

df['Gender'].value_counts()

df['Education'].unique().tolist()

df['Fitness'].value_counts()

df['Product'].value_counts()

df['Usage'].value_counts()

df['MaritalStatus'].value_counts()



"""**conversion of categorical attributes to 'category'**"""

# Converting Int data type of fitness rating to object data type
df_cat = df
df_cat['Fitness_category'] = df.Fitness

df_cat["Fitness_category"].replace({1:"Poor Shape",2:"Bad Shape",3:"Average Shape",4:"Good Shape",5:"Excellent Shape"},inplace=True)
df_cat.head()

"""* KP281, KP481, KP781 are the 3 different products
* There are 32 unique ages
* 104 Males and 76 Females are in the customers list
* 8 unique set of Educations (14, 15, 12, 13, 16, 18, 20, 21)
* Highest rated Fitness rating is 3
* Most customers usage treadmill atleast 3 days per week
* Majority of the customers who have purchased are Married/Partnered

**3.Visual Analysis - Univariate & Bivariate**

Univariate Analysis
For Continous Variable(s):Distplot, countplot, histogram for univariate analysis
"""

# Product Analysis - count plot
sns.countplot(data=df,x='Product')
plt.show

"""1.   KP281 is the most commonly purchase product type
2.   KP481 is the second most top product type purchased
3.KP781 is the least purchased product type




"""

# Marital Status Analysis - hist plot
sns.histplot(data=df,x='MaritalStatus')
plt.show()

"""Most products purchased by couples/Married/Partnered customer category"""

# Gender Analysis - Count Plot
sns.countplot(data=df,x='Gender',palette=['red','purple'])
plt.show

"""Most products purchased by Males, females are less interested in the product compared to Males"""

# Fitness rating analysis - count plot
sns.countplot(data=df,x='Fitness',palette=["green","red","cyan", "purple","yellow"])
plt.show

"""More than 90 customers have rated their physical fitness rating as Average Shape"""

# Income Analysis - Distplot
sns.distplot(df.Income)
plt.show()

"""Most of customers who have purchased the product have a average income between 40K to 60K and Average Income density is over 3.0"""

# Education Analysis - Histogram
sns.histplot(data=df,x='Education')

"""* Highest number of customers have 16 as their Education
* 14 is the second highest education among the customers
* 20 is the least education among the customers

**For categorical variable(s): Boxplot**
"""

# Usage Analysis - Box plot
sns.boxplot(data=df,x='Usage')
plt.show()

"""1.3 to 4 days is the most preferred usage days for customers
2.6 and 7 days per week is roughly the usage days for few customers (Outliers)


"""

# Fitness Rating Analysis - Box plot
sns.boxplot(data=df,x='Fitness')
plt.show()

"""* Couple of customers have rated their fitness rating as 1 - Poor Shape
* Most customers have rated fitness rating as 3.0 to 4.0

**For correlation: Heatmaps, Pairplots**
"""

#Correlation HeatMap
plt.figure(figsize=(20,8))
ax = sns.heatmap(df.corr(),annot=True,cmap='coolwarm')
plt.show()

"""* Correlation between Age and Miles is 0.03
* Correlation between Education and Income is 0.62
* Correlation between Usage and Fitness is 0.66
* Correlation between Fitness and Age is 0.06
* Correlation between Income and Usage is 0.51
* Correlation between Miles and Age is 0.03
"""

# Product Analysis - Pair Plot
sns.pairplot(df,hue='Product',kind='reg')
plt.show()

"""In the above pairplot the correlation with products and different attributes"""

# Average Age of customer using each product
df.groupby('Product')['Age'].mean()

"""* Mean Age of the customer who purchased product KP281 is 28.55
* Mean Age of the customer who purchased product KP481 is 28.90
* Mean Age of the customer who purchased product KP781 is 29.10
"""

# Average usage of each product type by the customer
df.groupby('Product')['Usage'].mean()

"""* Mean usage for product KP281 is 3.08
* Mean usage for product KP481 is 3.06
* Mean usage for product KP781 is 4.77
"""

# Average customer fitness rating for each product type purchased
df.groupby('Product')['Fitness'].mean()

"""

* For product KP281 the customer fitness mean is 2.96
* For product KP481 the customer fitness mean is 2.90
* For product KP781 the customer fitness mean is 4.62

"""

# Product purchased among Male and Female
sns.countplot(data=df,x='Product',hue='Gender')
plt.show()

"""* KP281 Product is the equally preferred by both male and female genders
* KP781 Product is mostly preferred among the Male customers
* Overall Male customers are the highest product purchaser



"""

# Count among Gender and their Marital Status
sns.countplot(data=df,x='Product',hue='MaritalStatus')
plt.show()

"""* For al the product KP281 ,KP481,KP781 partnered/married customer are the most buyers of aerofit"""

# Fitness rating among the customers categorised by Gender
plt.figure(figsize=(10,6))
sns.countplot(data=df,x='Fitness',hue='Gender',palette='cool')
plt.show()

"""* Among the fitness rating both Male and Female most have rated as average
* Significant number of Male customers are at Excellent shape compared to Female customer
"""

# Product purchased Customers Fitness Rating and their Gender
plt.figure(figsize=(12,5))
sns.kdeplot(data=df,x='Fitness',hue='Gender')
plt.show()

"""* Male customers are in better shape the female customers
* Though Female customers do not have poor shape, they are also not in excellent shape
* ome Male customers excellent body shape and few customers have poor shape as well


"""

# Distance covered by each Gender among the customers
plt.figure(figsize=(12,5))
sns.kdeplot(data=df,x='Miles',hue='Gender')
plt.show()

"""
* Male customers have a consistent distance coverage than female customers
* Female customers have max distance covered as just over 300 miles"""

plt.figure(figsize=(12,5))
sns.boxplot(x='Age',y='Product',data=df)
plt.show()

"""* Few customers with age above 40 use product KP781
* Most of the customers are comfortable with KP281 product type
* KP481 is the second highest popular product among the younger side of the customer
"""

# Miles with each product
plt.figure(figsize=(12,5))
sns.boxplot(x='Miles',y='Product',data=df)
plt.show()

"""
* Customers with product KP781, has been able to cover more miles than
  other two product types
* KP481 product is the second most highest miles covering product among
  the customers
* KP281 product customer had covered less distance compared with other two
  product types"""

# Miles covered in each product by gender and their marital status
sns.catplot(x='Gender',y='Miles',hue='Product',col='MaritalStatus',data=df,kind='bar')
plt.show()

"""* KP781 is more populat among the single and Partnered customers
* Among the both marital statuses, Single female does not prefer much of
  the products.
* Partnered Female bought KP781 treadmill compared to Partnered Male.
* Single Female customers bought KP281 treadmill slightly more compared to * Single Male customers.
* Partnered Male customers bought KP281 treadmill slightly more than
  Single Male customers.
* There are more single Males buying treadmill than single Females.
* Single Male customers bought KP781 treadmill compared to single Female.
* Partnered customers are more than Single customers.

**4.Missing Value & Outlier Detection**
"""

df.isna().sum()

"""No Null values found in any of the columns"""

df.duplicated().sum()

"""No duplicates have been observed"""

# Outlier calculation for Miles using Inter Quartile Range
q_75, q_25 = np.percentile(df['Miles'], [75 ,25])
miles_iqr = q_75 - q_25
print("Inter Quartile Range for Miles is", miles_iqr)

"""**Business Insights based on Non-Graphical and Visual Analysis**

**Marginal Probabilities**
"""

df.Product.value_counts(normalize=True)

"""Probability of buying
* KP281-0.44
* KP481-0.33
* KP781-0.22
"""

df.Gender.value_counts(normalize=True)

"""* Probablity of Male customers is 0.57
* Probablity of Male customers is 0.422
"""

df.MaritalStatus.value_counts(normalize=True)

"""* Probability of Married/Partnered is 0.59
* Probability of Single is 0.40

**Conditional Probabilities**
"""

df1= pd.crosstab(index=df['Gender'], columns=[df['Product']])
df1

Prob_of_Male=round(df1.loc['Male'].sum()/len(df),2)
Prob_of_Female=round(df1.loc['Female'].sum()/len(df),2)
print("Prob_of_Male:",Prob_of_Male)
print("Prob_of_Female:",Prob_of_Female)

def gender_Probability(gender,df):
    print(f"Prob P(KP781) for {gender}: {round(df['KP781'][gender]/df.loc[gender].sum(),2)}")
    print(f"Prob P(KP481) for {gender}: {round(df['KP481'][gender]/df.loc[gender].sum(),2)}")
    print(f"Prob P(KP281) for {gender}: {round(df['KP281'][gender]/df.loc[gender].sum(),2)}")
gender_Probability('Male',df1)
gender_Probability('Female',df1)

"""**Probability of each product for given Marital Status**"""

df2= pd.crosstab(index=df['MaritalStatus'], columns=[df['Product']])
df2

Prob_of_Partnered=round(df2.loc['Partnered'].sum()/len(df),2)
Prob_of_Single=round(df2.loc['Single'].sum()/len(df),2)
print("Prob_of_Partnered:",Prob_of_Partnered)
print("Prob_of_Single:",Prob_of_Single)

def MaritalStatus_Probability(MaritalStatus,df):
    print(f"Prob P(KP781) for {MaritalStatus}: {round(df['KP781'][MaritalStatus]/df.loc[MaritalStatus].sum(),2)}")
    print(f"Prob P(KP481) for {MaritalStatus}: {round(df['KP481'][MaritalStatus]/df.loc[MaritalStatus].sum(),2)}")
    print(f"Prob P(KP281) for {MaritalStatus}: {round(df['KP281'][MaritalStatus]/df.loc[MaritalStatus].sum(),2)}")
MaritalStatus_Probability('Partnered',df2)
MaritalStatus_Probability('Single',df2)

"""**Customer Profiling**"""

df_cat['Age_group'] = df_cat.Age
df_cat

# 0-21 -> Teen
# 22-35 -> Adult
# 36-45 -> Middle Age
# 46-60 -> Elder Age
df_cat.age_group = pd.cut(df.age_group,bins=[0,21,35,45,60],labels=['Teen','Adult','Middle Aged','Elder'])
df_cat

pd.crosstab(index=df_cat.Product,columns=df_cat.age_group)

"""Age groups have been categoricized according to the age .Table consist of products along with age group

**Recommendations**

Product KP281

* Easily affordable entry level product, which is also the maximum selling product.
* KP281 is the most popular product among the entry level customers.
* This product is easily afforded by both Male and Female customers.
* Average distance covered in this model is around 70 to 90 miles.
* Product is used 3 to 4 times a week.
* Single female & Partnered male customers bought this product more than single male customers.
* Income range between 39K to 53K have preferred this product.

Product KP481

* This is an Intermediate level Product.
* KP481 is the second most popular product among the customers.
* Fitness Level of this product users varies from Bad to Average Shape depending on their usage.
* Customers Prefer this product mostly to cover more miles than fitness.
* Average distance covered in this product is from 70 to 130 miles per week.
* More Female customers prefer this product than males.
* Probability of Female customer buying KP481 is significantly higher than male.
* The buyers of KP481 in Single & Partnered, Male & Female are same.
* The age range of KP481 treadmill customers is roughly between 24-34 years.

Product KP781
* Customers use this product mainly to cover more distance.
* Customers who use this product have rated excelled shape as fitness rating.
* Customer walk/run average 120 to 200 or more miles per week on his product.
* Average Income of KP781 buyers are over 75K per annum
* Partnered Female bought KP781 treadmill compared to Partnered Male.
"""